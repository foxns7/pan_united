package challenge2;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.ListIterator;


public class Manager {
	int id=0;
	LinkedList<Group> listOfGroups = new LinkedList<>();
	
	public Manager() {
		
	}
	
	public void add(int number) {
		if(listOfGroups.size()<2) {
			listOfGroups.addLast(new Group(id++));
		}
		
		System.out.println("Adding number "+number);
		ListIterator<Group> li = listOfGroups.listIterator(0);
		while (li.hasNext()) {
			Group currentGroup = li.next();
		    currentGroup.add(number);
		    if (li.hasPrevious()) {
		       Group previousGroup = li.previous();
		       if(previousGroup.sum!=currentGroup.sum && previousGroup.sum<currentGroup.sum) {
		    	   previousGroup.add(currentGroup.removeFirst());
		       }
		    }
		    break;
		}
	}
	
	public Integer getListSize() {
		try {
			if(listOfGroups.get(listOfGroups.size()-1).sum == listOfGroups.get(listOfGroups.size()-2).sum) {
				System.out.println("Returning list size "+listOfGroups.size());
				return listOfGroups.size();
			}
		}catch(Exception e) {
		}
		System.out.println("yay null");
		return null;
	}
	
	
	
}